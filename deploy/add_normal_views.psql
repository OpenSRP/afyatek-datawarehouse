-- Deploy afya-tek:add_normal_views to pg
-- requires: setup
-- requires: initial_migrations
-- requires: add_missing_mat_view_indices
-- requires: drop_triggers
-- requires: drop_materialized_views_refresh_functions
-- requires: drop_materialized_views

BEGIN;

-- XXX Add DDLs here.

--
-- Name: additional_needs_adolescent_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.additional_needs_adolescent_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.additional_needs_adolescent g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.additional_needs_adolescent_view OWNER TO :db_user;

--
-- Name: additional_needs_adolescent_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.additional_needs_adolescent_final AS
 SELECT additional_needs_adolescent_view.base_entity_id,
    additional_needs_adolescent_view.event_date,
    additional_needs_adolescent_view.team,
    additional_needs_adolescent_view.child_location_id,
    additional_needs_adolescent_view.location_id,
    additional_needs_adolescent_view.provider_id,
    additional_needs_adolescent_view.server_version,
    additional_needs_adolescent_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'adolescent_service_option'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS adolescent_service_option,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'adolescent_condition_present'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS adolescent_condition_present,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'additional_counseling'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS additional_counseling,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (additional_needs_adolescent_view.formsubmissionfield_ = 'date_of_illness'::text) THEN COALESCE(additional_needs_adolescent_view.humanreadablevalues_, additional_needs_adolescent_view.value_)
            ELSE NULL::text
        END) AS date_of_illness
   FROM afyatek_views.additional_needs_adolescent_view
  GROUP BY additional_needs_adolescent_view.base_entity_id, additional_needs_adolescent_view.event_date, additional_needs_adolescent_view.team, additional_needs_adolescent_view.location_id, additional_needs_adolescent_view.child_location_id, additional_needs_adolescent_view.provider_id, additional_needs_adolescent_view.server_version, additional_needs_adolescent_view.date_created
  ;


ALTER TABLE afyatek_final.additional_needs_adolescent_final OWNER TO :db_user;

--
-- Name: adolescent_addo_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.adolescent_addo_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.adolescent_addo_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.adolescent_addo_visit_view OWNER TO :db_user;

--
-- Name: adolescent_addo_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.adolescent_addo_visit_final AS
 SELECT adolescent_addo_visit_view.base_entity_id,
    adolescent_addo_visit_view.event_date,
    adolescent_addo_visit_view.team,
    adolescent_addo_visit_view.child_location_id,
    adolescent_addo_visit_view.location_id,
    adolescent_addo_visit_view.provider_id,
    adolescent_addo_visit_view.server_version,
    adolescent_addo_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'chw_link'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS chw_link,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'referral_status'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS referral_status,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'dispense_options'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS dispense_options,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'adolescent_present'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_present,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'all_meds_dispensed'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS all_meds_dispensed,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'addo_actions'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_actions,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'medications_selected'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medications_selected,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'medicine_dispensed'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medicine_dispensed,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'addo_medication_to_give'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_medication_to_give,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'asterisk_symbol'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS asterisk_symbol,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'adolescent_condition_present_other'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_condition_present_other,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'addo_referral_options'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_referral_options,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'addo_visit_date'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_visit_date,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'adolescent_condition_present'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_condition_present,
    max(
        CASE
            WHEN (adolescent_addo_visit_view.formsubmissionfield_ = 'linkage_recommendation'::text) THEN COALESCE(adolescent_addo_visit_view.humanreadablevalues_, adolescent_addo_visit_view.value_)
            ELSE NULL::text
        END) AS linkage_recommendation
   FROM afyatek_views.adolescent_addo_visit_view
  GROUP BY adolescent_addo_visit_view.base_entity_id, adolescent_addo_visit_view.event_date, adolescent_addo_visit_view.team, adolescent_addo_visit_view.location_id, adolescent_addo_visit_view.child_location_id, adolescent_addo_visit_view.provider_id, adolescent_addo_visit_view.server_version, adolescent_addo_visit_view.date_created
  ;


ALTER TABLE afyatek_final.adolescent_addo_visit_final OWNER TO :db_user;

--
-- Name: adolescent_home_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.adolescent_home_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.adolescent_home_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.adolescent_home_visit_view OWNER TO :db_user;

--
-- Name: adolescent_home_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.adolescent_home_visit_final AS
 SELECT adolescent_home_visit_view.base_entity_id,
    adolescent_home_visit_view.event_date,
    adolescent_home_visit_view.team,
    adolescent_home_visit_view.child_location_id,
    adolescent_home_visit_view.location_id,
    adolescent_home_visit_view.provider_id,
    adolescent_home_visit_view.server_version,
    adolescent_home_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'save'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS save,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'date_of_illness'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS date_of_illness,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'adolescent_counseling_given'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_counseling_given,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'adolescent_service_option'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_service_option,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'additional_counseling'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS additional_counseling,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'adolescent_condition_present'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_condition_present,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'chw_remarks_comments'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS chw_remarks_comments,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'adolescent_visit_date'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS adolescent_visit_date,
    max(
        CASE
            WHEN (adolescent_home_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(adolescent_home_visit_view.humanreadablevalues_, adolescent_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer
   FROM afyatek_views.adolescent_home_visit_view
  GROUP BY adolescent_home_visit_view.base_entity_id, adolescent_home_visit_view.event_date, adolescent_home_visit_view.team, adolescent_home_visit_view.location_id, adolescent_home_visit_view.child_location_id, adolescent_home_visit_view.provider_id, adolescent_home_visit_view.server_version, adolescent_home_visit_view.date_created
  ;


ALTER TABLE afyatek_final.adolescent_home_visit_final OWNER TO :db_user;

--
-- Name: adolescent_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.adolescent_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.adolescent_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.adolescent_registration_view OWNER TO :db_user;

--
-- Name: adolescent_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.adolescent_registration_final AS
 SELECT adolescent_registration_view.base_entity_id,
    adolescent_registration_view.event_date,
    adolescent_registration_view.team,
    adolescent_registration_view.child_location_id,
    adolescent_registration_view.location_id,
    adolescent_registration_view.provider_id,
    adolescent_registration_view.server_version,
    adolescent_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS mra,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'is_primary_caregiver'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS is_primary_caregiver,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'member_consent'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS member_consent,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'same_as_fam_name'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS same_as_fam_name,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (adolescent_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(adolescent_registration_view.humanreadablevalues_, adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown
   FROM afyatek_views.adolescent_registration_view
  GROUP BY adolescent_registration_view.base_entity_id, adolescent_registration_view.event_date, adolescent_registration_view.team, adolescent_registration_view.location_id, adolescent_registration_view.child_location_id, adolescent_registration_view.provider_id, adolescent_registration_view.server_version, adolescent_registration_view.date_created
  ;


ALTER TABLE afyatek_final.adolescent_registration_final OWNER TO :db_user;

--
-- Name: anc_addo_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.anc_addo_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.anc_addo_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.anc_addo_visit_view OWNER TO :db_user;

--
-- Name: anc_addo_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.anc_addo_visit_final AS
 SELECT anc_addo_visit_view.base_entity_id,
    anc_addo_visit_view.event_date,
    anc_addo_visit_view.team,
    anc_addo_visit_view.child_location_id,
    anc_addo_visit_view.location_id,
    anc_addo_visit_view.provider_id,
    anc_addo_visit_view.server_version,
    anc_addo_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'danger_signs_present'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'minor_illness_captured'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS minor_illness_captured,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'chw_link'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS chw_link,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'referral_status'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS referral_status,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'dispense_options'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS dispense_options,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'select_facility'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS select_facility,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'all_meds_dispensed'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS all_meds_dispensed,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'medications_selected'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medications_selected,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'medicine_dispensed'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medicine_dispensed,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'minor_illnesses'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS minor_illnesses,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'pregnant_woman_present'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS pregnant_woman_present,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'client_commodities_dispensed'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS client_commodities_dispensed,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'addo_medication_to_give'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_medication_to_give,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'asterisk_symbol'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS asterisk_symbol,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'addo_visit_date'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_visit_date,
    max(
        CASE
            WHEN (anc_addo_visit_view.formsubmissionfield_ = 'linkage_recommendation'::text) THEN COALESCE(anc_addo_visit_view.humanreadablevalues_, anc_addo_visit_view.value_)
            ELSE NULL::text
        END) AS linkage_recommendation
   FROM afyatek_views.anc_addo_visit_view
  GROUP BY anc_addo_visit_view.base_entity_id, anc_addo_visit_view.event_date, anc_addo_visit_view.team, anc_addo_visit_view.location_id, anc_addo_visit_view.child_location_id, anc_addo_visit_view.provider_id, anc_addo_visit_view.server_version, anc_addo_visit_view.date_created
  ;


ALTER TABLE afyatek_final.anc_addo_visit_final OWNER TO :db_user;

--
-- Name: anc_home_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.anc_home_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.anc_home_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.anc_home_visit_view OWNER TO :db_user;

--
-- Name: anc_home_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.anc_home_visit_final AS
 SELECT anc_home_visit_view.base_entity_id,
    anc_home_visit_view.event_date,
    anc_home_visit_view.team,
    anc_home_visit_view.location_id,
    anc_home_visit_view.child_location_id,
    anc_home_visit_view.provider_id,
    anc_home_visit_view.server_version,
    anc_home_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'danger_signs_present'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'minor_illnesses'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS minor_illnesses,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'anc_visit_date'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS anc_visit_date,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'date_of_illness'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS date_of_illness,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'chw_comment_anc'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS chw_comment_anc,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'counselling_given'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS counselling_given,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'fam_planning'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fam_planning,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'llin_given'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_given,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'llin_condition'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_condition,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'llin_2days'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_2days,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'fam_llin'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fam_llin,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'confirmed_visits'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS confirmed_visits,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'anc_hf_visit'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS anc_hf_visit,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'anc_hf_next_visit_date'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS anc_hf_next_visit_date,
    max(
        CASE
            WHEN (anc_home_visit_view.formsubmissionfield_ = 'danger_signs_counseling'::text) THEN COALESCE(anc_home_visit_view.humanreadablevalues_, anc_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_counseling
   FROM afyatek_views.anc_home_visit_view
  GROUP BY anc_home_visit_view.base_entity_id, anc_home_visit_view.event_date, anc_home_visit_view.team, anc_home_visit_view.location_id, anc_home_visit_view.child_location_id, anc_home_visit_view.provider_id, anc_home_visit_view.server_version, anc_home_visit_view.date_created
  ;


ALTER TABLE afyatek_final.anc_home_visit_final OWNER TO :db_user;

--
-- Name: anc_home_visit_not_done_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.anc_home_visit_not_done_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.anc_home_visit_not_done g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.anc_home_visit_not_done_view OWNER TO :db_user;

--
-- Name: anc_home_visit_not_done_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.anc_home_visit_not_done_final AS
 SELECT anc_home_visit_not_done_view.base_entity_id,
    anc_home_visit_not_done_view.event_date,
    anc_home_visit_not_done_view.team,
    anc_home_visit_not_done_view.child_location_id,
    anc_home_visit_not_done_view.location_id,
    anc_home_visit_not_done_view.provider_id,
    anc_home_visit_not_done_view.server_version,
    anc_home_visit_not_done_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (anc_home_visit_not_done_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(anc_home_visit_not_done_view.humanreadablevalues_, anc_home_visit_not_done_view.value_)
            ELSE NULL::text
        END) AS service_provider
   FROM afyatek_views.anc_home_visit_not_done_view
  GROUP BY anc_home_visit_not_done_view.base_entity_id, anc_home_visit_not_done_view.event_date, anc_home_visit_not_done_view.team, anc_home_visit_not_done_view.location_id, anc_home_visit_not_done_view.child_location_id, anc_home_visit_not_done_view.provider_id, anc_home_visit_not_done_view.server_version, anc_home_visit_not_done_view.date_created
  ;


ALTER TABLE afyatek_final.anc_home_visit_not_done_final OWNER TO :db_user;

--
-- Name: anc_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.anc_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.anc_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.anc_registration_view OWNER TO :db_user;

--
-- Name: anc_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.anc_registration_final AS
 SELECT anc_registration_view.base_entity_id,
    anc_registration_view.event_date,
    anc_registration_view.team,
    anc_registration_view.child_location_id,
    anc_registration_view.location_id,
    anc_registration_view.provider_id,
    anc_registration_view.server_version,
    anc_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'phone_person_assist'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS phone_person_assist,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'relational_id'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS relational_id,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'gest_age_note'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS gest_age_note,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'person_assist'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS person_assist,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'phone_number'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS phone_number,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'name_person_assist'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS name_person_assist,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'no_prev_preg'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS no_prev_preg,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'delivery_method'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS delivery_method,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'edd_note'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS edd_note,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'marital_status'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS marital_status,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'delivery_method_one'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS delivery_method_one,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'last_menstrual_period'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS last_menstrual_period,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'last_menstrual_period_unknown'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS last_menstrual_period_unknown,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'gravida'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS gravida,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'gest_age'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS gest_age,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'edd'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS edd,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'no_surv_children'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS no_surv_children,
    max(
        CASE
            WHEN (anc_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(anc_registration_view.humanreadablevalues_, anc_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print
   FROM afyatek_views.anc_registration_view
  GROUP BY anc_registration_view.base_entity_id, anc_registration_view.event_date, anc_registration_view.team, anc_registration_view.location_id, anc_registration_view.child_location_id, anc_registration_view.provider_id, anc_registration_view.server_version, anc_registration_view.date_created
  ;


ALTER TABLE afyatek_final.anc_registration_final OWNER TO :db_user;

--
-- Name: child_addo_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.child_addo_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.child_addo_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.child_addo_visit_view OWNER TO :db_user;

--
-- Name: child_addo_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.child_addo_visit_final AS
 SELECT child_addo_visit_view.base_entity_id,
    child_addo_visit_view.event_date,
    child_addo_visit_view.team,
    child_addo_visit_view.child_location_id,
    child_addo_visit_view.location_id,
    child_addo_visit_view.provider_id,
    child_addo_visit_view.server_version,
    child_addo_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'chw_link'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS chw_link,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'referral_status'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS referral_status,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'dispense_options'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS dispense_options,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'condition_urgency'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS condition_urgency,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'all_meds_dispensed'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS all_meds_dispensed,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'addo_actions'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_actions,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'child_present'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS child_present,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'medications_selected'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medications_selected,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'medicine_dispensed'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS medicine_dispensed,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'linkage_recommendation'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS linkage_recommendation,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'addo_medication_to_give'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_medication_to_give,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'asterisk_symbol'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS asterisk_symbol,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'addo_visit_date'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_visit_date,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'child_conditions'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS child_conditions,
    max(
        CASE
            WHEN (child_addo_visit_view.formsubmissionfield_ = 'danger_signs_present_child'::text) THEN COALESCE(child_addo_visit_view.humanreadablevalues_, child_addo_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present_child
   FROM afyatek_views.child_addo_visit_view
  GROUP BY child_addo_visit_view.base_entity_id, child_addo_visit_view.event_date, child_addo_visit_view.team, child_addo_visit_view.location_id, child_addo_visit_view.child_location_id, child_addo_visit_view.provider_id, child_addo_visit_view.server_version, child_addo_visit_view.date_created
  ;


ALTER TABLE afyatek_final.child_addo_visit_final OWNER TO :db_user;

--
-- Name: child_home_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.child_home_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.child_home_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.child_home_visit_view OWNER TO :db_user;

--
-- Name: child_home_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.child_home_visit_final AS
 SELECT child_home_visit_view.base_entity_id,
    child_home_visit_view.event_date,
    child_home_visit_view.team,
    child_home_visit_view.location_id,
    child_home_visit_view.child_location_id,
    child_home_visit_view.provider_id,
    child_home_visit_view.server_version,
    child_home_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'danger_signs_present_child'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present_child,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'minor_illness_present_child'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS minor_illness_present_child,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'date_of_illness_1m5yr'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS date_of_illness_1m5yr,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'home_visit_date'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS home_visit_date,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'couselling_pnc'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS counselling_pnc,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'fam_llin_1m5yr'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS fam_llin_1m5yr,
    max(
        CASE
            WHEN (child_home_visit_view.formsubmissionfield_ = 'llin_2days_1m5yr'::text) THEN COALESCE(child_home_visit_view.humanreadablevalues_, child_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_2days_1m5yr
   FROM afyatek_views.child_home_visit_view
  GROUP BY child_home_visit_view.base_entity_id, child_home_visit_view.event_date, child_home_visit_view.team, child_home_visit_view.location_id, child_home_visit_view.child_location_id, child_home_visit_view.provider_id, child_home_visit_view.server_version, child_home_visit_view.date_created
  ;


ALTER TABLE afyatek_final.child_home_visit_final OWNER TO :db_user;

--
-- Name: child_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.child_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.child_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.child_registration_view OWNER TO :db_user;

--
-- Name: child_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.child_registration_final AS
 SELECT child_registration_view.base_entity_id,
    child_registration_view.event_date,
    child_registration_view.team,
    child_registration_view.child_location_id,
    child_registration_view.location_id,
    child_registration_view.provider_id,
    child_registration_view.server_version,
    child_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS mra,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'is_primary_caregiver'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS is_primary_caregiver,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'member_consent'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS member_consent,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'same_as_fam_name'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS same_as_fam_name,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'nutrition_status'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS nutrition_status,
    max(
        CASE
            WHEN (child_registration_view.formsubmissionfield_ = 'rhc_card'::text) THEN COALESCE(child_registration_view.humanreadablevalues_, child_registration_view.value_)
            ELSE NULL::text
        END) AS rhc_card
   FROM afyatek_views.child_registration_view
  GROUP BY child_registration_view.base_entity_id, child_registration_view.event_date, child_registration_view.team, child_registration_view.location_id, child_registration_view.child_location_id, child_registration_view.provider_id, child_registration_view.server_version, child_registration_view.date_created
  ;


ALTER TABLE afyatek_final.child_registration_final OWNER TO :db_user;

--
-- Name: clients_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.clients_final AS
 SELECT g.id,
    g.base_entity_id,
    g.server_version,
    g.date_created,
    g.date_edited,
    g.first_name,
    g.last_name,
    g.type,
    g.birth_date,
    g.gender,
    g.addresses,
    g.identifiers,
    g.relationships,
    g.attributes,
    g.birth_date_approx,
    g.death_date_approx,
    g.revision,
    g.client_database_version,
    g.client_application_version,
    public.uuid_generate_v4() AS unique_id
   FROM public.clients g
  ;


ALTER TABLE afyatek_final.clients_final OWNER TO :db_user;

--
-- Name: danger_signs_child_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.danger_signs_child_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.danger_signs_child g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.danger_signs_child_view OWNER TO :db_user;

--
-- Name: danger_signs_child_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.danger_signs_child_final AS
 SELECT danger_signs_child_view.base_entity_id,
    danger_signs_child_view.event_date,
    danger_signs_child_view.team,
    danger_signs_child_view.child_location_id,
    danger_signs_child_view.location_id,
    danger_signs_child_view.provider_id,
    danger_signs_child_view.server_version,
    danger_signs_child_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'minor_illness_present_child'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS minor_illness_present_child,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'date_of_illness_1m5yr'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS date_of_illness_1m5yr,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'danger_signs_captured_sw'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured_sw,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'danger_signs_present_child'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present_child,
    max(
        CASE
            WHEN (danger_signs_child_view.formsubmissionfield_ = 'illness_description_1m5yr'::text) THEN COALESCE(danger_signs_child_view.humanreadablevalues_, danger_signs_child_view.value_)
            ELSE NULL::text
        END) AS illness_description_1m5yr
   FROM afyatek_views.danger_signs_child_view
  GROUP BY danger_signs_child_view.base_entity_id, danger_signs_child_view.event_date, danger_signs_child_view.team, danger_signs_child_view.location_id, danger_signs_child_view.child_location_id, danger_signs_child_view.provider_id, danger_signs_child_view.server_version, danger_signs_child_view.date_created
  ;


ALTER TABLE afyatek_final.danger_signs_child_final OWNER TO :db_user;

--
-- Name: danger_signs_mother_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.danger_signs_mother_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.danger_signs_mother g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.danger_signs_mother_view OWNER TO :db_user;

--
-- Name: danger_signs_mother_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.danger_signs_mother_final AS
 SELECT danger_signs_mother_view.base_entity_id,
    danger_signs_mother_view.event_date,
    danger_signs_mother_view.team,
    danger_signs_mother_view.location_id,
    danger_signs_mother_view.child_location_id,
    danger_signs_mother_view.provider_id,
    danger_signs_mother_view.server_version,
    danger_signs_mother_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'minor_illness_present_mama'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS minor_illness_present_mama,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'date_of_minor_illness'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS date_of_minor_illness,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'danger_signs_other'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS danger_signs_other,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'danger_signs_present_mama'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present_mama,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'date_of_illness'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS date_of_illness,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (danger_signs_mother_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(danger_signs_mother_view.humanreadablevalues_, danger_signs_mother_view.value_)
            ELSE NULL::text
        END) AS save_n_refer
   FROM afyatek_views.danger_signs_mother_view
  GROUP BY danger_signs_mother_view.base_entity_id, danger_signs_mother_view.event_date, danger_signs_mother_view.team, danger_signs_mother_view.location_id, danger_signs_mother_view.child_location_id, danger_signs_mother_view.provider_id, danger_signs_mother_view.server_version, danger_signs_mother_view.date_created
  ;


ALTER TABLE afyatek_final.danger_signs_mother_final OWNER TO :db_user;

--
-- Name: family_member_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.family_member_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.family_member_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.family_member_registration_view OWNER TO :db_user;

--
-- Name: family_member_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.family_member_registration_final AS
 SELECT family_member_registration_view.base_entity_id,
    family_member_registration_view.event_date,
    family_member_registration_view.team,
    family_member_registration_view.child_location_id,
    family_member_registration_view.location_id,
    family_member_registration_view.provider_id,
    family_member_registration_view.server_version,
    family_member_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS mra,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'is_primary_caregiver'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS is_primary_caregiver,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'member_consent'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS member_consent,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'same_as_fam_name'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS same_as_fam_name,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'preferred_name'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS preferred_name,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'disabilities'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS disabilities,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'other_phone_number'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS other_phone_number,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'preg_1yr'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS preg_1yr,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'fam_consent'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS fam_consent,
    max(
        CASE
            WHEN (family_member_registration_view.formsubmissionfield_ = 'consent_photo'::text) THEN COALESCE(family_member_registration_view.humanreadablevalues_, family_member_registration_view.value_)
            ELSE NULL::text
        END) AS consent_photo
   FROM afyatek_views.family_member_registration_view
  GROUP BY family_member_registration_view.base_entity_id, family_member_registration_view.event_date, family_member_registration_view.team, family_member_registration_view.location_id, family_member_registration_view.child_location_id, family_member_registration_view.provider_id, family_member_registration_view.server_version, family_member_registration_view.date_created
  ;


ALTER TABLE afyatek_final.family_member_registration_final OWNER TO :db_user;

--
-- Name: family_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.family_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.family_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.family_registration_view OWNER TO :db_user;

--
-- Name: family_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.family_registration_final AS
 SELECT family_registration_view.base_entity_id,
    family_registration_view.event_date,
    family_registration_view.team,
    family_registration_view.child_location_id,
    family_registration_view.location_id,
    family_registration_view.provider_id,
    family_registration_view.server_version,
    family_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'surname'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS surname,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS mra,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'disabilities'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS disabilities,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'nearest_facility'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS nearest_facility,
    max(
        CASE
            WHEN (family_registration_view.formsubmissionfield_ = 'gps'::text) THEN COALESCE(family_registration_view.humanreadablevalues_, family_registration_view.value_)
            ELSE NULL::text
        END) AS gps
   FROM afyatek_views.family_registration_view
  GROUP BY family_registration_view.base_entity_id, family_registration_view.event_date, family_registration_view.team, family_registration_view.location_id, family_registration_view.child_location_id, family_registration_view.provider_id, family_registration_view.server_version, family_registration_view.date_created
  ;


ALTER TABLE afyatek_final.family_registration_final OWNER TO :db_user;

--
-- Name: home_visit_danger_signs_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.home_visit_danger_signs_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.home_visit_danger_signs g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.home_visit_danger_signs_view OWNER TO :db_user;

--
-- Name: home_visit_danger_signs_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.home_visit_danger_signs_final AS
 SELECT home_visit_danger_signs_view.base_entity_id,
    home_visit_danger_signs_view.event_date,
    home_visit_danger_signs_view.team,
    home_visit_danger_signs_view.location_id,
    home_visit_danger_signs_view.child_location_id,
    home_visit_danger_signs_view.provider_id,
    home_visit_danger_signs_view.server_version,
    home_visit_danger_signs_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'minor_illnesses'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS minor_illnesses,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'minorillness_description'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS minorillness_description,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'danger_signs_present'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'danger_signs_counseling'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS danger_signs_counseling,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'date_of_illness'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS date_of_illness,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (home_visit_danger_signs_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(home_visit_danger_signs_view.humanreadablevalues_, home_visit_danger_signs_view.value_)
            ELSE NULL::text
        END) AS save_n_refer
   FROM afyatek_views.home_visit_danger_signs_view
  GROUP BY home_visit_danger_signs_view.base_entity_id, home_visit_danger_signs_view.event_date, home_visit_danger_signs_view.team, home_visit_danger_signs_view.location_id, home_visit_danger_signs_view.child_location_id, home_visit_danger_signs_view.provider_id, home_visit_danger_signs_view.server_version, home_visit_danger_signs_view.date_created
  ;


ALTER TABLE afyatek_final.home_visit_danger_signs_final OWNER TO :db_user;

--
-- Name: linkage_follow_up_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.linkage_follow_up_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.linkage_follow_up_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.linkage_follow_up_visit_view OWNER TO :db_user;

--
-- Name: linkage_follow_up_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.linkage_follow_up_visit_final AS
 SELECT linkage_follow_up_visit_view.base_entity_id,
    linkage_follow_up_visit_view.event_date,
    linkage_follow_up_visit_view.team,
    linkage_follow_up_visit_view.location_id,
    linkage_follow_up_visit_view.child_location_id,
    linkage_follow_up_visit_view.provider_id,
    linkage_follow_up_visit_view.server_version,
    linkage_follow_up_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'noservices_reason'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS noservices_reason,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'novisit_reason'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS novisit_reason,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'complete_referral'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS complete_referral,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'services_hf'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS services_hf,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'visit_hf'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS visit_hf,
    max(
        CASE
            WHEN (linkage_follow_up_visit_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(linkage_follow_up_visit_view.humanreadablevalues_, linkage_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS phonenumber
   FROM afyatek_views.linkage_follow_up_visit_view
  GROUP BY linkage_follow_up_visit_view.base_entity_id, linkage_follow_up_visit_view.event_date, linkage_follow_up_visit_view.team, linkage_follow_up_visit_view.location_id, linkage_follow_up_visit_view.child_location_id, linkage_follow_up_visit_view.provider_id, linkage_follow_up_visit_view.server_version, linkage_follow_up_visit_view.date_created
  ;


ALTER TABLE afyatek_final.linkage_follow_up_visit_final OWNER TO :db_user;

--
-- Name: other_member_addo_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.other_member_addo_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.other_member_addo_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.other_member_addo_visit_view OWNER TO :db_user;

--
-- Name: other_member_addo_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.other_member_addo_visit_final AS
 SELECT other_member_addo_visit_view.base_entity_id,
    other_member_addo_visit_view.event_date,
    other_member_addo_visit_view.team,
    other_member_addo_visit_view.child_location_id,
    other_member_addo_visit_view.location_id,
    other_member_addo_visit_view.provider_id,
    other_member_addo_visit_view.server_version,
    other_member_addo_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'addo_visit_date'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS addo_visit_date,
    max(
        CASE
            WHEN (other_member_addo_visit_view.formsubmissionfield_ = 'service_provided_other'::text) THEN COALESCE(other_member_addo_visit_view.humanreadablevalues_, other_member_addo_visit_view.value_)
            ELSE NULL::text
        END) AS service_provided_other
   FROM afyatek_views.other_member_addo_visit_view
  GROUP BY other_member_addo_visit_view.base_entity_id, other_member_addo_visit_view.event_date, other_member_addo_visit_view.team, other_member_addo_visit_view.location_id, other_member_addo_visit_view.child_location_id, other_member_addo_visit_view.provider_id, other_member_addo_visit_view.server_version, other_member_addo_visit_view.date_created
  ;


ALTER TABLE afyatek_final.other_member_addo_visit_final OWNER TO :db_user;

--
-- Name: pnc_home_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.pnc_home_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.pnc_home_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.pnc_home_visit_view OWNER TO :db_user;

--
-- Name: pnc_home_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.pnc_home_visit_final AS
 SELECT pnc_home_visit_view.base_entity_id,
    pnc_home_visit_view.event_date,
    pnc_home_visit_view.team,
    pnc_home_visit_view.child_location_id,
    pnc_home_visit_view.location_id,
    pnc_home_visit_view.provider_id,
    pnc_home_visit_view.server_version,
    pnc_home_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'pnc_visit_date'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS pnc_visit_date,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'pnc_visit_1'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS pnc_visit_1,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'refill_commodities'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS refill_commodities,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'llin_condition'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_condition,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'ifa_mother'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS ifa_mother,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'mild_pain'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS mild_pain,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'fp_period_received'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fp_period_received,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'pnc_visit_2'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS pnc_visit_2,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'confirmed_health_facility_visits'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS confirmed_health_facility_visits,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'vit_a_mother'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS vit_a_mother,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'llin_2days'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS llin_2days,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'fam_llin'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fam_llin,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'fp_counseling'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fp_counseling,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'danger_signs_captured_sw'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured_sw,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'fp_method'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fp_method,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'minor_illness_present_mama'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS minor_illness_present_mama,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'fp_start_date'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS fp_start_date,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'pnc_hf_visit2_date'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS pnc_hf_visit2_date,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'nutrition_status_mama'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS nutrition_status_mama,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'last_health_facility_visit_date'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS last_health_facility_visit_date,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'danger_signs_present_mama'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS danger_signs_present_mama,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'pnc_hf_visit1_date'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS pnc_hf_visit1_date,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'save'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS save,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'couselling_pnc'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS couselling_pnc,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'mild_fever'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS mild_fever,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (pnc_home_visit_view.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(pnc_home_visit_view.humanreadablevalues_, pnc_home_visit_view.value_)
            ELSE NULL::text
        END) AS save_n_link
   FROM afyatek_views.pnc_home_visit_view
  GROUP BY pnc_home_visit_view.base_entity_id, pnc_home_visit_view.event_date, pnc_home_visit_view.team, pnc_home_visit_view.location_id, pnc_home_visit_view.child_location_id, pnc_home_visit_view.provider_id, pnc_home_visit_view.server_version, pnc_home_visit_view.date_created
  ;


ALTER TABLE afyatek_final.pnc_home_visit_final OWNER TO :db_user;

--
-- Name: pregnancy_outcome_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.pregnancy_outcome_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.pregnancy_outcome g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.pregnancy_outcome_view OWNER TO :db_user;

--
-- Name: pregnancy_outcome_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.pregnancy_outcome_final AS
 SELECT pregnancy_outcome_view.base_entity_id,
    pregnancy_outcome_view.event_date,
    pregnancy_outcome_view.team,
    pregnancy_outcome_view.child_location_id,
    pregnancy_outcome_view.location_id,
    pregnancy_outcome_view.provider_id,
    pregnancy_outcome_view.server_version,
    pregnancy_outcome_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'preg_outcome_date'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS preg_outcome_date,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'preg_outcome_motheralive'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS preg_outcome_motheralive,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'preg_outcome_miscarriage'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS preg_outcome_miscarriage,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'preg_outcome'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS preg_outcome,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'no_childrenalive'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS no_childrenalive,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'no_childrendied'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS no_childrendied,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'delivery_date'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS delivery_date,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'delivery_place'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS delivery_place,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'delivery_place_description'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS delivery_place_description,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (pregnancy_outcome_view.formsubmissionfield_ = 'no_children'::text) THEN COALESCE(pregnancy_outcome_view.humanreadablevalues_, pregnancy_outcome_view.value_)
            ELSE NULL::text
        END) AS no_children
   FROM afyatek_views.pregnancy_outcome_view
  GROUP BY pregnancy_outcome_view.base_entity_id, pregnancy_outcome_view.event_date, pregnancy_outcome_view.team, pregnancy_outcome_view.location_id, pregnancy_outcome_view.child_location_id, pregnancy_outcome_view.provider_id, pregnancy_outcome_view.server_version, pregnancy_outcome_view.date_created
  ;


ALTER TABLE afyatek_final.pregnancy_outcome_final OWNER TO :db_user;

--
-- Name: referral_follow_up_visit_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.referral_follow_up_visit_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.child_location_id,
    g.location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.referral_follow_up_visit g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.referral_follow_up_visit_view OWNER TO :db_user;

--
-- Name: referral_follow_up_visit_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.referral_follow_up_visit_final AS
 SELECT referral_follow_up_visit_view.base_entity_id,
    referral_follow_up_visit_view.event_date,
    referral_follow_up_visit_view.team,
    referral_follow_up_visit_view.location_id,
    referral_follow_up_visit_view.child_location_id,
    referral_follow_up_visit_view.provider_id,
    referral_follow_up_visit_view.server_version,
    referral_follow_up_visit_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'services_hf'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS services_hf,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'visit_hf'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS visit_hf,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'noservices_reason'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS noservices_reason,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'novisit_reason'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS novisit_reason,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'other_reason'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS other_reason,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'other_reason_novisit'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS other_reason_novisit,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'complete_referral'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS complete_referral,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (referral_follow_up_visit_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(referral_follow_up_visit_view.humanreadablevalues_, referral_follow_up_visit_view.value_)
            ELSE NULL::text
        END) AS end_time
   FROM afyatek_views.referral_follow_up_visit_view
  GROUP BY referral_follow_up_visit_view.base_entity_id, referral_follow_up_visit_view.event_date, referral_follow_up_visit_view.team, referral_follow_up_visit_view.location_id, referral_follow_up_visit_view.child_location_id, referral_follow_up_visit_view.provider_id, referral_follow_up_visit_view.server_version, referral_follow_up_visit_view.date_created
  ;


ALTER TABLE afyatek_final.referral_follow_up_visit_final OWNER TO :db_user;

--
-- Name: remove_child_under_5_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.remove_child_under_5_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.remove_child_under_5 g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.remove_child_under_5_view OWNER TO :db_user;

--
-- Name: remove_child_under_5_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.remove_child_under_5_final AS
 SELECT remove_child_under_5_view.base_entity_id,
    remove_child_under_5_view.event_date,
    remove_child_under_5_view.team,
    remove_child_under_5_view.child_location_id,
    remove_child_under_5_view.location_id,
    remove_child_under_5_view.provider_id,
    remove_child_under_5_view.server_version,
    remove_child_under_5_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'date_moved'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS date_moved,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'remove_reason'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS remove_reason,
    max(
        CASE
            WHEN (remove_child_under_5_view.formsubmissionfield_ = 'date_died'::text) THEN COALESCE(remove_child_under_5_view.humanreadablevalues_, remove_child_under_5_view.value_)
            ELSE NULL::text
        END) AS date_died
   FROM afyatek_views.remove_child_under_5_view
  GROUP BY remove_child_under_5_view.base_entity_id, remove_child_under_5_view.event_date, remove_child_under_5_view.team, remove_child_under_5_view.location_id, remove_child_under_5_view.child_location_id, remove_child_under_5_view.provider_id, remove_child_under_5_view.server_version, remove_child_under_5_view.date_created
  ;


ALTER TABLE afyatek_final.remove_child_under_5_final OWNER TO :db_user;

--
-- Name: remove_family_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.remove_family_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.remove_family g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.remove_family_view OWNER TO :db_user;

--
-- Name: remove_family_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.remove_family_final AS
 SELECT remove_family_view.base_entity_id,
    remove_family_view.event_date,
    remove_family_view.team,
    remove_family_view.child_location_id,
    remove_family_view.location_id,
    remove_family_view.provider_id,
    remove_family_view.server_version,
    remove_family_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'date_moved'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS date_moved,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'remove_reason'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS remove_reason,
    max(
        CASE
            WHEN (remove_family_view.formsubmissionfield_ = 'date_died'::text) THEN COALESCE(remove_family_view.humanreadablevalues_, remove_family_view.value_)
            ELSE NULL::text
        END) AS date_died
   FROM afyatek_views.remove_family_view
  GROUP BY remove_family_view.base_entity_id, remove_family_view.event_date, remove_family_view.team, remove_family_view.location_id, remove_family_view.child_location_id, remove_family_view.provider_id, remove_family_view.server_version, remove_family_view.date_created
  ;


ALTER TABLE afyatek_final.remove_family_final OWNER TO :db_user;

--
-- Name: remove_family_member_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.remove_family_member_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.remove_family_member g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.remove_family_member_view OWNER TO :db_user;

--
-- Name: remove_family_member_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.remove_family_member_final AS
 SELECT remove_family_member_view.base_entity_id,
    remove_family_member_view.event_date,
    remove_family_member_view.team,
    remove_family_member_view.child_location_id,
    remove_family_member_view.location_id,
    remove_family_member_view.provider_id,
    remove_family_member_view.server_version,
    remove_family_member_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'date_moved'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS date_moved,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'remove_reason'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS remove_reason,
    max(
        CASE
            WHEN (remove_family_member_view.formsubmissionfield_ = 'date_died'::text) THEN COALESCE(remove_family_member_view.humanreadablevalues_, remove_family_member_view.value_)
            ELSE NULL::text
        END) AS date_died
   FROM afyatek_views.remove_family_member_view
  GROUP BY remove_family_member_view.base_entity_id, remove_family_member_view.event_date, remove_family_member_view.team, remove_family_member_view.location_id, remove_family_member_view.child_location_id, remove_family_member_view.provider_id, remove_family_member_view.server_version, remove_family_member_view.date_created
  ;


ALTER TABLE afyatek_final.remove_family_member_final OWNER TO :db_user;

--
-- Name: tasks_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.tasks_final AS
 SELECT g.identifier,
    g.plan_identifier,
    g.group_identifier,
    g.status,
    g.business_status,
    g.priority,
    g.code,
    g.description,
    g.focus,
    g.task_for,
    g.execution_start_date,
    g.execution_end_date,
    g.owner,
    g.note,
    g.server_version,
    public.uuid_generate_v4() AS unique_id
   FROM public.tasks g
  ;


ALTER TABLE afyatek_final.tasks_final OWNER TO :db_user;

--
-- Name: update_adolescent_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_adolescent_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_adolescent_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_adolescent_registration_view OWNER TO :db_user;

--
-- Name: update_adolescent_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_adolescent_registration_final AS
 SELECT update_adolescent_registration_view.base_entity_id,
    update_adolescent_registration_view.event_date,
    update_adolescent_registration_view.team,
    update_adolescent_registration_view.child_location_id,
    update_adolescent_registration_view.location_id,
    update_adolescent_registration_view.provider_id,
    update_adolescent_registration_view.server_version,
    update_adolescent_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'phone_number'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS phone_number,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'same_as_fam_name'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS same_as_fam_name,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'preg_1yr'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS preg_1yr,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'surname'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS surname,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'is_primary_caregiver'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS is_primary_caregiver,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (update_adolescent_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(update_adolescent_registration_view.humanreadablevalues_, update_adolescent_registration_view.value_)
            ELSE NULL::text
        END) AS mra
   FROM afyatek_views.update_adolescent_registration_view
  GROUP BY update_adolescent_registration_view.base_entity_id, update_adolescent_registration_view.event_date, update_adolescent_registration_view.team, update_adolescent_registration_view.location_id, update_adolescent_registration_view.child_location_id, update_adolescent_registration_view.provider_id, update_adolescent_registration_view.server_version, update_adolescent_registration_view.date_created
  ;


ALTER TABLE afyatek_final.update_adolescent_registration_final OWNER TO :db_user;

--
-- Name: update_child_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_child_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_child_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_child_registration_view OWNER TO :db_user;

--
-- Name: update_child_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_child_registration_final AS
 SELECT update_child_registration_view.base_entity_id,
    update_child_registration_view.event_date,
    update_child_registration_view.team,
    update_child_registration_view.child_location_id,
    update_child_registration_view.location_id,
    update_child_registration_view.provider_id,
    update_child_registration_view.server_version,
    update_child_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'surname'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS surname,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'rhc_card'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS rhc_card,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'birth_cert_available'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS birth_cert_available,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (update_child_registration_view.formsubmissionfield_ = 'disabilities'::text) THEN COALESCE(update_child_registration_view.humanreadablevalues_, update_child_registration_view.value_)
            ELSE NULL::text
        END) AS disabilities
   FROM afyatek_views.update_child_registration_view
  GROUP BY update_child_registration_view.base_entity_id, update_child_registration_view.event_date, update_child_registration_view.team, update_child_registration_view.location_id, update_child_registration_view.child_location_id, update_child_registration_view.provider_id, update_child_registration_view.server_version, update_child_registration_view.date_created
  ;


ALTER TABLE afyatek_final.update_child_registration_final OWNER TO :db_user;

--
-- Name: update_family_member_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_family_member_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_family_member_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_family_member_registration_view OWNER TO :db_user;

--
-- Name: update_family_member_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_family_member_registration_final AS
 SELECT update_family_member_registration_view.base_entity_id,
    update_family_member_registration_view.event_date,
    update_family_member_registration_view.team,
    update_family_member_registration_view.child_location_id,
    update_family_member_registration_view.location_id,
    update_family_member_registration_view.provider_id,
    update_family_member_registration_view.server_version,
    update_family_member_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'fam_name'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS fam_name,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'dob_calculated'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS dob_calculated,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'wra'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS wra,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'mra'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS mra,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'is_primary_caregiver'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS is_primary_caregiver,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'member_consent'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS member_consent,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'same_as_fam_name'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS same_as_fam_name,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'finger_print'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS finger_print,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'preferred_name'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS preferred_name,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'disabilities'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS disabilities,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'other_phone_number'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS other_phone_number,
    max(
        CASE
            WHEN (update_family_member_registration_view.formsubmissionfield_ = 'preg_1yr'::text) THEN COALESCE(update_family_member_registration_view.humanreadablevalues_, update_family_member_registration_view.value_)
            ELSE NULL::text
        END) AS preg_1yr
   FROM afyatek_views.update_family_member_registration_view
  GROUP BY update_family_member_registration_view.base_entity_id, update_family_member_registration_view.event_date, update_family_member_registration_view.team, update_family_member_registration_view.location_id, update_family_member_registration_view.child_location_id, update_family_member_registration_view.provider_id, update_family_member_registration_view.server_version, update_family_member_registration_view.date_created
  ;


ALTER TABLE afyatek_final.update_family_member_registration_final OWNER TO :db_user;

--
-- Name: update_family_member_relations_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_family_member_relations_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_family_member_relations g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_family_member_relations_view OWNER TO :db_user;

--
-- Name: update_family_member_relations_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_family_member_relations_final AS
 SELECT update_family_member_relations_view.base_entity_id,
    update_family_member_relations_view.event_date,
    update_family_member_relations_view.team,
    update_family_member_relations_view.child_location_id,
    update_family_member_relations_view.location_id,
    update_family_member_relations_view.provider_id,
    update_family_member_relations_view.server_version,
    update_family_member_relations_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'phone_number'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS phone_number,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'highest_edu_level'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS highest_edu_level,
    max(
        CASE
            WHEN (update_family_member_relations_view.formsubmissionfield_ = 'other_phone_number'::text) THEN COALESCE(update_family_member_relations_view.humanreadablevalues_, update_family_member_relations_view.value_)
            ELSE NULL::text
        END) AS other_phone_number
   FROM afyatek_views.update_family_member_relations_view
  GROUP BY update_family_member_relations_view.base_entity_id, update_family_member_relations_view.event_date, update_family_member_relations_view.team, update_family_member_relations_view.location_id, update_family_member_relations_view.child_location_id, update_family_member_relations_view.provider_id, update_family_member_relations_view.server_version, update_family_member_relations_view.date_created
  ;


ALTER TABLE afyatek_final.update_family_member_relations_final OWNER TO :db_user;

--
-- Name: update_family_registration_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_family_registration_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_family_registration g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_family_registration_view OWNER TO :db_user;

--
-- Name: update_family_registration_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_family_registration_final AS
 SELECT update_family_registration_view.base_entity_id,
    update_family_registration_view.event_date,
    update_family_registration_view.team,
    update_family_registration_view.child_location_id,
    update_family_registration_view.location_id,
    update_family_registration_view.provider_id,
    update_family_registration_view.server_version,
    update_family_registration_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'surname'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS surname,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'dob_unknown'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS dob_unknown,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'age_calculated'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS age_calculated,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'last_interacted_with'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS last_interacted_with,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'nearest_facility'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS nearest_facility,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'gps'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS gps,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_family_registration_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_family_registration_view.humanreadablevalues_, update_family_registration_view.value_)
            ELSE NULL::text
        END) AS deviceid
   FROM afyatek_views.update_family_registration_view
  GROUP BY update_family_registration_view.base_entity_id, update_family_registration_view.event_date, update_family_registration_view.team, update_family_registration_view.location_id, update_family_registration_view.child_location_id, update_family_registration_view.provider_id, update_family_registration_view.server_version, update_family_registration_view.date_created
  ;


ALTER TABLE afyatek_final.update_family_registration_final OWNER TO :db_user;

--
-- Name: update_family_relations_view; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.update_family_relations_view AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.update_family_relations g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.update_family_relations_view OWNER TO :db_user;

--
-- Name: update_family_relations_final; Type: VIEW; Schema: afyatek_final; Owner: dtreedev
--

CREATE VIEW afyatek_final.update_family_relations_final AS
 SELECT update_family_relations_view.base_entity_id,
    update_family_relations_view.event_date,
    update_family_relations_view.team,
    update_family_relations_view.child_location_id,
    update_family_relations_view.location_id,
    update_family_relations_view.provider_id,
    update_family_relations_view.server_version,
    update_family_relations_view.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'start'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'end'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (update_family_relations_view.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(update_family_relations_view.humanreadablevalues_, update_family_relations_view.value_)
            ELSE NULL::text
        END) AS service_provider
   FROM afyatek_views.update_family_relations_view
  GROUP BY update_family_relations_view.base_entity_id, update_family_relations_view.event_date, update_family_relations_view.team, update_family_relations_view.location_id, update_family_relations_view.child_location_id, update_family_relations_view.provider_id, update_family_relations_view.server_version, update_family_relations_view.date_created
  ;


ALTER TABLE afyatek_final.update_family_relations_final OWNER TO :db_user;

--
-- Name: danger_signs_child_lk_test_views; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.danger_signs_child_lk_test_views AS
 SELECT g.id,
    g.base_entity_id,
    g.entity_type,
    g.event_date,
    g.event_type,
    g.team,
    g.location_id,
    g.child_location_id,
    g.provider_id,
    g.server_version,
    g.date_created,
    public.uuid_generate_v4() AS unique_id,
    ((observations.value -> 'values'::text) ->> 0) AS value_,
    (observations.value ->> 'formSubmissionField'::text) AS formsubmissionfield_,
    ((observations.value -> 'humanReadableValues'::text) ->> 0) AS humanreadablevalues_,
    (observations.value ->> 'set'::text) AS set_,
    (observations.value -> 'fieldCode'::text) AS fieldcode,
    (observations.value -> 'fieldType'::text) AS fieldtype,
    (observations.value -> 'parentCode'::text) AS parentcode,
    (observations.value -> 'fieldDataType'::text) AS fielddatatype
   FROM public.danger_signs_child g,
    LATERAL jsonb_array_elements(g.obs) observations(value)
  ;


ALTER TABLE afyatek_views.danger_signs_child_lk_test_views OWNER TO :db_user;

--
-- Name: danger_signs_child_lk_test_final; Type: VIEW; Schema: afyatek_views; Owner: dtreedev
--

CREATE VIEW afyatek_views.danger_signs_child_lk_test_final AS
 SELECT danger_signs_child_lk_test_views.base_entity_id,
    danger_signs_child_lk_test_views.event_date,
    danger_signs_child_lk_test_views.team,
    danger_signs_child_lk_test_views.child_location_id,
    danger_signs_child_lk_test_views.location_id,
    danger_signs_child_lk_test_views.provider_id,
    danger_signs_child_lk_test_views.server_version,
    danger_signs_child_lk_test_views.date_created,
    public.uuid_generate_v4() AS unique_id,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'start'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS start_time,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'end'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS end_time,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'deviceid'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS deviceid,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'simserial'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS simserial,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'subscriberid'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS subscriberid,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'service_provider'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS service_provider,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'minor_illness_present_child'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS minor_illness_present_child,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'date_of_illness_1m5yr'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS date_of_illness_1m5yr,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'phonenumber'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS phonenumber,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'danger_signs_captured_sw'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS danger_signs_captured_sw,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'danger_signs_captured'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS danger_signs_captured,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'save_n_refer'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS save_n_refer,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'save_n_link'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS save_n_link,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'danger_signs_present_child'::text) THEN danger_signs_child_lk_test_views.humanreadablevalues_
            ELSE NULL::text
        END) AS danger_signs_present_child_one,
    min(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'danger_signs_present_child'::text) THEN danger_signs_child_lk_test_views.humanreadablevalues_
            ELSE NULL::text
        END) AS danger_signs_present_child_two,
    max(
        CASE
            WHEN (danger_signs_child_lk_test_views.formsubmissionfield_ = 'illness_description_1m5yr'::text) THEN COALESCE(danger_signs_child_lk_test_views.humanreadablevalues_, danger_signs_child_lk_test_views.value_)
            ELSE NULL::text
        END) AS illness_description_1m5yr
   FROM afyatek_views.danger_signs_child_lk_test_views
  GROUP BY danger_signs_child_lk_test_views.base_entity_id, danger_signs_child_lk_test_views.event_date, danger_signs_child_lk_test_views.team, danger_signs_child_lk_test_views.location_id, danger_signs_child_lk_test_views.child_location_id, danger_signs_child_lk_test_views.provider_id, danger_signs_child_lk_test_views.server_version, danger_signs_child_lk_test_views.date_created
  ;

COMMIT;
