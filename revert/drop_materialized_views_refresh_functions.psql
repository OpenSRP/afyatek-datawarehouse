-- Revert afya-tek:drop_materialized_views_refresh_functions from pg

BEGIN;

-- XXX Add DDLs here.

--
-- Name: danger_signs_child_test(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.danger_signs_child_test() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.danger_signs_child_lk_test_views;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.danger_signs_child_lk_test_final; RETURN NULL; END; $$;


ALTER FUNCTION public.danger_signs_child_test() OWNER TO :db_user;

--
-- Name: de_worming(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.de_worming() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.de_worming_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.de_worming_final; RETURN NULL; END; $$;


ALTER FUNCTION public.de_worming() OWNER TO :db_user;

--
-- Name: family_member_registration(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.family_member_registration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.family_member_registration_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.family_member_registration_final; RETURN NULL; END; $$;


ALTER FUNCTION public.family_member_registration() OWNER TO :db_user;

--
-- Name: family_registration(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.family_registration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.family_registration_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.family_registration_final; RETURN NULL; END; $$;


ALTER FUNCTION public.family_registration() OWNER TO :db_user;

--
-- Name: linkage_follow_up_visit(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.linkage_follow_up_visit() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.linkage_follow_up_visit_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.linkage_follow_up_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.linkage_follow_up_visit() OWNER TO :db_user;

--
-- Name: pregnancy_outcome(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.pregnancy_outcome() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.pregnancy_outcome_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.pregnancy_outcome_final; RETURN NULL; END; $$;


ALTER FUNCTION public.pregnancy_outcome() OWNER TO :db_user;

--
-- Name: referral_follow_up_visit(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.referral_follow_up_visit() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.referral_follow_up_visit_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.referral_follow_up_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.referral_follow_up_visit() OWNER TO :db_user;

--
-- Name: remove_child_under_5(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.remove_child_under_5() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.remove_child_under_5_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.remove_child_under_5_final; RETURN NULL; END; $$;


ALTER FUNCTION public.remove_child_under_5() OWNER TO :db_user;

--
-- Name: remove_family(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.remove_family() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.remove_family_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.remove_family_final; RETURN NULL; END; $$;


ALTER FUNCTION public.remove_family() OWNER TO :db_user;

--
-- Name: remove_family_member(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.remove_family_member() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.remove_family_member_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.remove_family_member_final; RETURN NULL; END; $$;


ALTER FUNCTION public.remove_family_member() OWNER TO :db_user;

--
-- Name: update_adolescent_home_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_adolescent_home_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.adolescent_home_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.adolescent_home_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_adolescent_home_visit_final() OWNER TO :db_user;

--
-- Name: update_anc_addo_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_anc_addo_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.anc_addo_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.anc_addo_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_anc_addo_visit_final() OWNER TO :db_user;

--
-- Name: update_anc_home_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_anc_home_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.anc_home_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.anc_home_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_anc_home_visit_final() OWNER TO :db_user;

--
-- Name: update_child_home_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_child_home_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.child_home_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.child_home_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_child_home_visit_final() OWNER TO :db_user;

--
-- Name: update_child_home_visit_revised(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_child_home_visit_revised() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.child_home_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.child_home_visit_final; PERFORM pg_sleep(180); RETURN NULL; END; $$;


ALTER FUNCTION public.update_child_home_visit_revised() OWNER TO :db_user;

--
-- Name: update_child_registration(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_child_registration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.update_child_registration_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.update_child_registration_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_child_registration() OWNER TO :db_user;

--
-- Name: update_danger_signs_mother_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_danger_signs_mother_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.danger_signs_mother_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.danger_signs_mother_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_danger_signs_mother_final() OWNER TO :db_user;

--
-- Name: update_family_member_registration(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_family_member_registration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.update_family_member_registration_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.update_family_member_registration_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_family_member_registration() OWNER TO :db_user;

--
-- Name: update_family_member_relations(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_family_member_relations() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.update_family_member_relations_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.update_family_member_relations_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_family_member_relations() OWNER TO :db_user;

--
-- Name: update_family_registration(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_family_registration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.update_family_registration_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.update_family_registration_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_family_registration() OWNER TO :db_user;

--
-- Name: update_family_relations(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_family_relations() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.update_family_relations_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.update_family_relations_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_family_relations() OWNER TO :db_user;

--
-- Name: update_home_visit_danger_signs_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_home_visit_danger_signs_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.home_visit_danger_signs_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.home_visit_danger_signs_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_home_visit_danger_signs_final() OWNER TO :db_user;

--
-- Name: update_linkage_follow_up_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_linkage_follow_up_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.linkage_follow_up_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.linkage_follow_up_visit_final; PERFORM pg_sleep(180); RETURN NULL; END; $$;


ALTER FUNCTION public.update_linkage_follow_up_visit_final() OWNER TO :db_user;

--
-- Name: update_pnc_home_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_pnc_home_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.pnc_home_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.pnc_home_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_pnc_home_visit_final() OWNER TO :db_user;

--
-- Name: update_referral_follow_up_visit_final(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.update_referral_follow_up_visit_final() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.referral_follow_up_visit_view;
PERFORM pg_sleep(180); REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.referral_follow_up_visit_final; RETURN NULL; END; $$;


ALTER FUNCTION public.update_referral_follow_up_visit_final() OWNER TO :db_user;

--
-- Name: vitamin_a(); Type: FUNCTION; Schema: public; Owner: dtreedev
--

CREATE FUNCTION public.vitamin_a() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_views.vitamin_a_view;
REFRESH MATERIALIZED VIEW CONCURRENTLY afyatek_final.vitamin_a_final; RETURN NULL; END; $$;


ALTER FUNCTION public.vitamin_a() OWNER TO :db_user;


COMMIT;
